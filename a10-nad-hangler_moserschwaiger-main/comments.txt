### A7 -) a typecheck like 'if(i.getClass().getSimpleName().equals("ItemList")){' should be avoided by the pattern!! this is even worse than the usage of instanceof because strings like "ItemList" will most likely not be updated during refactoring in case you decide to rename the class. Also, if you decide to add another list-like class, you need to update also ItemList and you have to duplicate code. -) instead of 'public Optional<Double> getPrice(String item) {' it is more flexible to have a method 'public Optional<Item> getItem(String item)'; you can call getPrice() or any other method on the returned object.
### A8 ok
### A9 no two different Receivers; INewsReceiver is not a good name ('I...', as it is not an interface but a class); an interface would have been better (then concrete receivers could inherit from some other class, e.g., some GUI-class); bonus: hashtag, encrypt
